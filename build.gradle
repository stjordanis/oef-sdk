plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'org.jetbrains.kotlin.jvm' version "1.3.31"
    id "com.google.protobuf" version "0.8.7"
    id "java"
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '0.9.18'
}

group 'com.github.fetchai'
version '0.5.1'


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/dokka' }
}

project.ext {
    kotlin_version = '1.3.31'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"


    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.6.1'

    //logging
    implementation 'org.apache.logging.log4j:log4j-api:2.11.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.1'

    //test
    implementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    implementation 'com.willowtreeapps.assertk:assertk-jvm:0.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testCompile 'com.willowtreeapps.assertk:assertk-jvm:0.12'
}


sourceSets {
    main {
        java {
            srcDir 'oef/src/java'
        }
        kotlin {
            srcDir 'oef/src/kotlin'
        }
        resources {
            srcDir 'oef/src/resources'
        }
        proto {
            srcDir 'protocol/src/proto/v1'
        }
    }
    test {
        java {
            srcDir 'oef/test/java'
        }
        kotlin {
            srcDir 'oef/test/kotlin'
        }
        resources {
            srcDir 'oef/test/resources'
        }
        proto {
            srcDir 'protocol/test/proto'
        }
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
}

test {
    useJUnitPlatform()
}

buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"

    publishAlways()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}